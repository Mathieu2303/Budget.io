{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathi\\\\PersonalWebProject\\\\my-app\\\\frontend\\\\src\\\\components\\\\expenseForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserForm() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [balance, setTotalBalance] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (name && balance) {\n      const newUser = {\n        name,\n        balance: parseFloat(balance)\n      };\n      try {\n        const response = await axios.post(\"http://localhost:8080/api/users/create\", newUser);\n        console.log(\"User created:\", response.data);\n        alert(`User created with ID: ${response.data.id}`);\n\n        // Clear form after submission\n        setName(\"\");\n        setTotalBalance(\"\");\n      } catch (error) {\n        console.error(\"Error creating user:\", error);\n        alert(\"Error creating user. Check console for details.\");\n      }\n    } else {\n      alert(\"Please fill out all fields.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"user-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"user-name\",\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"user-name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"total_balance\",\n      children: \"Total Balance:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"total_balance\",\n      value: balance,\n      onChange: e => setTotalBalance(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(UserForm, \"iUlvStEwZ+xZZBoOEo5VEAONm+c=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","UserForm","_s","name","setName","balance","setTotalBalance","handleSubmit","e","preventDefault","newUser","parseFloat","response","post","console","log","data","alert","id","error","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/mathi/PersonalWebProject/my-app/frontend/src/components/expenseForm.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./form.css\"; \n\nfunction UserForm() {\n    const [name, setName] = useState(\"\");\n    const [balance, setTotalBalance] = useState(\"\");\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (name && balance) {\n            const newUser = {\n                name,\n                balance: parseFloat(balance)\n            };\n\n            try {\n                const response = await axios.post(\n                    \"http://localhost:8080/api/users/create\",\n                    newUser\n                );\n                console.log(\"User created:\", response.data);\n                alert(`User created with ID: ${response.data.id}`);\n\n                // Clear form after submission\n                setName(\"\");\n                setTotalBalance(\"\");\n            } catch (error) {\n                console.error(\"Error creating user:\", error);\n                alert(\"Error creating user. Check console for details.\");\n            }\n        } else {\n            alert(\"Please fill out all fields.\");\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className=\"user-form\">\n            <h2>Register User</h2>\n\n            <label htmlFor=\"user-name\">Name:</label>\n            <input\n                type=\"text\"\n                id=\"user-name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n            />\n            <br />\n\n            <label htmlFor=\"total_balance\">Total Balance:</label>\n            <input\n                type=\"number\"\n                id=\"total_balance\"\n                value={balance}\n                onChange={(e) => setTotalBalance(e.target.value)}\n                required\n            />\n            <br />\n\n            <button type=\"submit\">Add User</button>\n        </form>\n    );\n}\n\nexport default UserForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}